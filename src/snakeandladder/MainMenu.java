/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package snakeandladder;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author SampritBiswas
 * Roll Number : 11CS10038
 */
public class MainMenu extends javax.swing.JFrame{

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        setLocation(400, 200);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scoreCardFrame = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scoreCardTable = new javax.swing.JTable();
        howToPlayFrame = new javax.swing.JFrame();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel3 = new javax.swing.JLabel();
        playersFrame = new javax.swing.JFrame();
        twoPlayersButton = new javax.swing.JButton();
        threePlayersButton = new javax.swing.JButton();
        backMainMenuButton = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        customizeBoardButton = new javax.swing.JButton();
        highScoresButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        mainMenuLabel = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Score Card");

        scoreCardTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        scoreCardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "  S. No.", "  Name", "  Score", "  Dimension"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        scoreCardTable.setGridColor(new java.awt.Color(255, 51, 0));
        scoreCardTable.setRowHeight(18);
        jScrollPane1.setViewportView(scoreCardTable);

        javax.swing.GroupLayout scoreCardFrameLayout = new javax.swing.GroupLayout(scoreCardFrame.getContentPane());
        scoreCardFrame.getContentPane().setLayout(scoreCardFrameLayout);
        scoreCardFrameLayout.setHorizontalGroup(
            scoreCardFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scoreCardFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(scoreCardFrameLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        scoreCardFrameLayout.setVerticalGroup(
            scoreCardFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoreCardFrameLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );

        howToPlayFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/snakeandladder/images/howToPlay.png"))); // NOI18N
        jLabel3.setBounds(0, 0, 430, 400);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout howToPlayFrameLayout = new javax.swing.GroupLayout(howToPlayFrame.getContentPane());
        howToPlayFrame.getContentPane().setLayout(howToPlayFrameLayout);
        howToPlayFrameLayout.setHorizontalGroup(
            howToPlayFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
        );
        howToPlayFrameLayout.setVerticalGroup(
            howToPlayFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
        );

        playersFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        twoPlayersButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        twoPlayersButton.setText("2 Players");
        twoPlayersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoPlayersButtonActionPerformed(evt);
            }
        });

        threePlayersButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        threePlayersButton.setText("3 Players");
        threePlayersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threePlayersButtonActionPerformed(evt);
            }
        });

        backMainMenuButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backMainMenuButton.setText("Back To Main Menu");
        backMainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playersFrameLayout = new javax.swing.GroupLayout(playersFrame.getContentPane());
        playersFrame.getContentPane().setLayout(playersFrameLayout);
        playersFrameLayout.setHorizontalGroup(
            playersFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersFrameLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(playersFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backMainMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(threePlayersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(twoPlayersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        playersFrameLayout.setVerticalGroup(
            playersFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playersFrameLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(twoPlayersButton)
                .addGap(18, 18, 18)
                .addComponent(threePlayersButton)
                .addGap(18, 18, 18)
                .addComponent(backMainMenuButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        newGameButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        newGameButton.setText("New Game");
        newGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameButtonActionPerformed(evt);
            }
        });

        customizeBoardButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        customizeBoardButton.setText("Customize Board");
        customizeBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customizeBoardButtonActionPerformed(evt);
            }
        });

        highScoresButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        highScoresButton.setText("High Scores");
        highScoresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highScoresButtonActionPerformed(evt);
            }
        });

        helpButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        exitButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        mainMenuLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mainMenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainMenuLabel.setText("Main Menu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(highScoresButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customizeBoardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(helpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainMenuLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(141, 141, 141))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainMenuLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(customizeBoardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(highScoresButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void newGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameButtonActionPerformed
        setVisible(false);
        playersFrame.setSize(300, 200);
        playersFrame.setLocation(400, 200);
        playersFrame.setVisible(true);
    }//GEN-LAST:event_newGameButtonActionPerformed

    private void customizeBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customizeBoardButtonActionPerformed
        
        int dimension  = Integer.parseInt(JOptionPane.showInputDialog(
        new JFrame(),
        "Please Enter the dimension : ",""));
        if(dimension<5 || dimension>12){
            dimension=8;
            String error = "Dimensions must be between 5 and 12!!!";
            JOptionPane.showMessageDialog(new JFrame(), error, "Error Message", JOptionPane.ERROR_MESSAGE);
            cus.setDimension(dimension,dimension);
            cus.customBoard(4, 4);
            return;
        }
        
        cus.setDimension(dimension,dimension);
       
        if (JOptionPane.showConfirmDialog(new JFrame(),
        "Do you want to Change the position of Snakes and Ladders ?", "Customize",
        JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION){
            if(dimension<=7){
                cus.customBoard(2, 2);
            }
            else{
                cus.customBoard(4, 4);
            }
            return;
        }
        
        int noOfSnakes  = Integer.parseInt(JOptionPane.showInputDialog(
        new JFrame(),
        "Please Enter the number of Snakes : ",""));
        int noOfLadders = Integer.parseInt(JOptionPane.showInputDialog(
        new JFrame(),
        "Please Enter the number of Ladders : ",""));
        if(noOfSnakes>(cus.setRows/2+2)||noOfLadders>(cus.setRows/2+2)){
            JOptionPane.showMessageDialog(new JFrame(),"Number of Snakes or Ladders is too high!!!", "Error Message", JOptionPane.ERROR_MESSAGE);
            cus.customBoard(cus.setRows/2, cus.setRows/2);
            return;
        }
        
        
        if (JOptionPane.showConfirmDialog(new JFrame(),
        "Do you want to set new positions of Snakes and Ladders ?", "Customize",
        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            
            cus.snakes.clear();
            cus.ladders.clear();
            for(int q=0; q<noOfSnakes; q++){
                cus.tempSnake = (new customizeBoard()). new Snakes();
                int snakeFrom = Integer.parseInt(JOptionPane.showInputDialog(
                new JFrame(),
                "Please Enter the starting position of snake "+q+" : ",""));
                int snakeTo = Integer.parseInt(JOptionPane.showInputDialog(
                new JFrame(),
                "Please Enter the end position of snake "+q+" : ",""));
                cus.tempSnake.setSnake(snakeFrom, snakeTo);
                cus.snakes.add(cus.tempSnake);
            }
            for(int q=0;q<noOfLadders;q++){
                cus.tempLadder = (new customizeBoard()). new Ladders();
                int snakeFrom = Integer.parseInt(JOptionPane.showInputDialog(
                new JFrame(),
                "Please Enter the starting position of ladder "+q+" : ",""));
                int snakeTo = Integer.parseInt(JOptionPane.showInputDialog(
                new JFrame(),
                "Please Enter the end position of ladder "+q+" : ",""));
                cus.tempLadder.setLadders(snakeFrom, snakeTo);
                cus.ladders.add(cus.tempLadder);
            }
        }
        else{
            cus.customBoard(noOfSnakes, noOfLadders);
        }
    }//GEN-LAST:event_customizeBoardButtonActionPerformed

    private void highScoresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highScoresButtonActionPerformed
        scoreCardFrame.setSize(450, 400);
        scoreCardFrame.setVisible(true);
        printHighScores();
    }//GEN-LAST:event_highScoresButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        howToPlayFrame.setSize(450, 440);
        howToPlayFrame.setVisible(true);
    }//GEN-LAST:event_helpButtonActionPerformed

    private void twoPlayersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoPlayersButtonActionPerformed
        player.setNoOfPlayers(2);
        player.setPlayer1(JOptionPane.showInputDialog(
        new JFrame(),"Please Enter the name of Player 1 : ",""));
        player.setPlayer2(JOptionPane.showInputDialog(
        new JFrame(),"Please Enter the name of Player 2 : ",""));
        startPlay(2);
    }//GEN-LAST:event_twoPlayersButtonActionPerformed

    private void threePlayersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threePlayersButtonActionPerformed
        player.setNoOfPlayers(3);
        player.setPlayer1(JOptionPane.showInputDialog(
        new JFrame(),"Please Enter the name of Player 1 : ",""));
        player.setPlayer2(JOptionPane.showInputDialog(
        new JFrame(),"Please Enter the name of Player 2 : ",""));
        player.setPlayer3(JOptionPane.showInputDialog(
        new JFrame(),"Please Enter the name of Player 3 : ",""));
        startPlay(3);
    }//GEN-LAST:event_threePlayersButtonActionPerformed

    private void backMainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainMenuButtonActionPerformed
        playersFrame.setVisible(false);
        setVisible(true);
    }//GEN-LAST:event_backMainMenuButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backMainMenuButton;
    private javax.swing.JButton customizeBoardButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton highScoresButton;
    private javax.swing.JFrame howToPlayFrame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mainMenuLabel;
    private javax.swing.JButton newGameButton;
    private javax.swing.JFrame playersFrame;
    private javax.swing.JFrame scoreCardFrame;
    public javax.swing.JTable scoreCardTable;
    private javax.swing.JButton threePlayersButton;
    private javax.swing.JButton twoPlayersButton;
    // End of variables declaration//GEN-END:variables

    customizeBoard cus = null;
    PlayingBoard play = null;
    Players player=null;
    int highScoreValue=0;
    
    public void setVisibility(boolean s){
        setVisible(s);
    }
    
    public void setClasses(customizeBoard c, Players p){
        cus=c;
        player=p;
    }
    public void startPlay(int p){
        playersFrame.setVisible(false);
        play = new PlayingBoard(cus);
        play.setVisibility(true);
        play.setClasses(cus, this,player);
        if(p==2){
            play.setNamesInTextField(player.getPlayerName(0),player.getPlayerName(1),player.getPlayerName(2));
            play.setButton3Visible(false);
        }
        else{
            play.setNamesInTextField(player.getPlayerName(0),player.getPlayerName(1),player.getPlayerName(2));
            play.setButton3Visible(true);
        }
        cus.setClasses(player, play);
        cus.createSnakesAndLadder();
        String message = "Let's Begin The Game!!!\n"+player.getPlayerName(0)+" to begin the game.";
        JOptionPane.showMessageDialog(new JFrame(), message, "Start", JOptionPane.INFORMATION_MESSAGE);
        
    }
    public void setScoreCardFrameVisible(boolean b){
        if(b==false){
            return;
        }
        scoreCardFrame.setSize(450, 400);
        scoreCardFrame.setVisible(true);
    }
    public void printHighScores(){
        
        ArrayList<Score> oldScores = new ArrayList<>();        
        
        try {
            FileInputStream fileStream = new FileInputStream("HighScoreList.ser");
            try (ObjectInputStream os = new ObjectInputStream(fileStream)) {
                Object one = os.readObject();
                oldScores = (ArrayList<Score>)one;
            }
        } catch (IOException ex) {
            try {
                FileOutputStream fileStream = new FileOutputStream("HighScoreList.ser");
                ObjectOutputStream os = new ObjectOutputStream(fileStream);
                os.writeObject(oldScores);            
                os.close();
            } catch (IOException ef) {
                System.out.println("\nFile Not Found!!!");
                ef.printStackTrace();
            }
        }catch(ClassNotFoundException ec){
            System.out.println("\nClass Not Found!!!");
            ec.printStackTrace();
        }
        Collections.sort(oldScores);
        int i=0;
        int size=oldScores.size();
        for(int k=0;k<size;k++){
            if(i>=10){
               oldScores.remove(i);
               size--;
            }
            i++;
        }
        i=0;
        for(Score score : oldScores){
            if(i==9){
                highScoreValue = score.playerMoves;
            }
            if(i>=10){
                break;
            }
            scoreCardTable.getModel().setValueAt(i+1, i, 0);
            scoreCardTable.getModel().setValueAt(score.name+" ", i, 1);
            scoreCardTable.getModel().setValueAt(score.playerMoves, i, 2);
            scoreCardTable.getModel().setValueAt(score.dimension, i, 3);
            i++;
        }
        try {
            FileOutputStream fileStream = new FileOutputStream("HighScoreList.ser");
            ObjectOutputStream os = new ObjectOutputStream(fileStream);
            os.writeObject(oldScores);            
            os.close();
        } catch (IOException ex) {
            System.out.println("\nFile Not Found!!!");
            ex.printStackTrace();
        }      
    }
}
